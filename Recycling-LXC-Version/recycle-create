#!/bin/bash
# Accepts arguments of the container template name (1), public ip address, mitm port, and container name

# Docker commands to create and start container 
# TODO:- ADD additional images
# if [ $# -ne 4 ]
# then
#   echo "Usage: recycle-create.sh <container_variant>, <public_ip> <MITM_port> <container_name>"
#   exit 1
# fi

sudo lxc-create -n $4 -t download -- -d ubuntu -r focal -a amd64
sudo lxc-start -n $4

sleep 5

# put openssh onto container
# NEW COMMENT: We don't need this bc we are using snapshots that have all the necessary configurations
# sudo lxc-attach -n "$4" -- bash -c "yes | sudo apt install openssh-server"

# We do need this right now but we will eventually have snapshots so we won't need it in the future
echo "Y" | sudo lxc-attach -n $4 -- sudo apt install openssh-server

# Set up container based on level indicated by random generation
if [ $1 == 1 ]
then
    # level 1
    sudo lxc-attach -n $4 -- bash -c "sudo echo printf \"This is a test message, beware! - Level 1\" >> /etc/update-motd.d/00-header"
elif [ $1 == 2 ]
then
    # level 2
    sudo lxc-attach -n $4 -- bash -c "sudo echo printf \"This is a test message, beware! - Level 2\" >> /etc/update-motd.d/00-header"
elif [ $1 == 3 ]
then
    # level 3
    sudo lxc-attach -n $4 -- bash -c "sudo echo printf \"This is a test message, beware! - Level 3\" >> /etc/update-motd.d/00-header"
elif [ $1 == 4 ]
then
    # level 4
    sudo lxc-attach -n $4 -- bash -c "sudo echo printf \"This is a test message, beware! - Level 4\" >> /etc/update-motd.d/00-header"
fi

# pull ip address of container
ip_addr=$(sudo lxc-ls -f | grep "$4 " | tr -s " " | cut -d " " -f 5)
# echo $ip_addr
sudo sysctl -w net.ipv4.conf.all.route_localnet=1

d=$(date +%Y-%m-%d)
echo $d

t=$(date +%T)
echo $t

sudo mkdir /MITM
sudo mkdir /MITM/mitm_logs
sudo mkdir /MITM/mitm_logs/$d

sudo forever -l /MITM/mitm_logs/$d/$t-$4.log start /MITM/mitm.js -n $4 -i $ip_addr -p $3 --auto-access --auto-access-fixed 3 --debug

sudo ip addr add $2/16 brd + dev eth1
sudo iptables --table nat --insert PREROUTING --source 0.0.0.0/0 --destination $2 --jump DNAT --to-destination $ip_addr
sudo iptables --table nat --insert POSTROUTING --source $ip_addr --destination 0.0.0.0/0 --jump SNAT --to-source $2
sudo iptables --table nat --insert PREROUTING --source 0.0.0.0/0 --destination $2 --protocol tcp --dport 22 --jump DNAT --to-destination 127.0.0.1:$3


